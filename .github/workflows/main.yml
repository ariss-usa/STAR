name: Build and Package MissionController

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  VERSION: "1.3"

jobs:
  package-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pywinpty

      - name: Build Java Project
        run: mvn clean package
        working-directory: MissionControllerUI

      - name: Package Java App
        run: |
          jpackage --name MissionController `
                   --input MissionControllerUI/target `
                   --main-jar star-1.0-SNAPSHOT-jar-with-dependencies.jar `
                   --main-class org.ariss.star.Main `
                   --type app-image `
                   --dest dist `
                   --app-version $env:VERSION

      - name: Package Python App
        run: pyinstaller --distpath dist --workpath build --hidden-import pywinpty backend.py

      - name: Download Binaries from Release
        run: |
          $outDir = "MissionController-windows-v${env:VERSION}"
          mkdir $outDir

          Invoke-WebRequest -Uri "https://github.com/unshrawal/star-binaries/releases/download/1.0/direwolf.exe" -OutFile "$outDir/direwolf.exe"
          Invoke-WebRequest -Uri "https://github.com/unshrawal/star-binaries/releases/download/1.0/gen_packets.exe" -OutFile "$outDir/gen_packets.exe"
          Invoke-WebRequest -Uri "https://github.com/unshrawal/star-binaries/releases/download/1.0/gpredict-win32-2.2.1.zip" -OutFile "gpredict-win32-2.2.1.zip"
          Expand-Archive -Path "gpredict-win32-2.2.1.zip" -DestinationPath "$outDir"

          Invoke-WebRequest -Uri "https://github.com/unshrawal/star-binaries/releases/download/1.0/MARS-SIM.zip" -OutFile "MARS-SIM.zip"
          Expand-Archive -Path "MARS-SIM.zip" -DestinationPath "$outDir"
        
      - name: Rename and Organize Output
        run: |
          $outDir = "MissionController-windows-v${env:VERSION}"
          Move-Item dist $outDir\dist
          Copy-Item direwolf-win.conf -Destination $outDir
          Copy-Item launcher.bat -Destination $outDir
          Compress-Archive -Path $outDir -DestinationPath "${outDir}.zip"
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: missioncontroller-windows
          path: MissionController-windows-v${{ env.VERSION }}.zip

  package-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Java Project
        run: mvn clean package
        working-directory: MissionControllerUI

      - name: Package Java App
        run: |
          jpackage --name MissionController \
                   --input MissionControllerUI/target \
                   --main-jar star-1.0-SNAPSHOT-jar-with-dependencies.jar \
                   --main-class org.ariss.star.Main \
                   --type app-image \
                   --dest dist \
                   --app-version $VERSION

      - name: Package Python App
        run: pyinstaller --distpath dist --workpath build backend.py

      - name: Rename and Organize Output
        run: |
          outDir="MissionController-linux-v$VERSION"
          mkdir "$outDir"
          mv dist "$outDir/dist"
          cp cleanup.sh direwolf.conf script.sh start.sh "$outDir/"
          tar -czf "$outDir.tar.gz" "$outDir"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: missioncontroller-linux
          path: MissionController-linux-v${{ env.VERSION }}.tar.gz
